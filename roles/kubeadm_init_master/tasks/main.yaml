---
- name: Init master node
  when: inventory_hostname in groups['master_origin']
  block:
    - name: Create kube-vip manifest
      ansible.builtin.shell: |
        export VIP={{ k8s.control_plane_endpoint }}
        export INTERFACE={{ network.interface }}
        KVVERSION=$(curl -sL https://api.github.com/repos/kube-vip/kube-vip/releases | jq -r ".[0].name")
        alias kube-vip="podman run --network host --rm ghcr.io/kube-vip/kube-vip:$KVVERSION"

        kube-vip manifest pod \
            --interface $INTERFACE \
            --address $VIP \
            --controlplane \
            --services \
            --arp \
            --leaderElection | tee /etc/kubernetes/manifests/kube-vip.yaml

    - name: Set kubeadm-config.yaml
      ansible.builtin.template:
        src: init_kubelet.yaml.j2
        dest: "{{ k8s.kubeadm_config_path }}"
        owner: root
        group: root
        mode: 0600

    - name: Temporarily circumvent reported issues(https://github.com/kube-vip/kube-vip/issues/684)
      ansible.builtin.lineinfile:
        path: /etc/kubernetes/manifests/kube-vip.yaml
        search_string: "path: /etc/kubernetes/admin.conf"
        line: "      path: /etc/kubernetes/super-admin.conf"
        state: present

    - name: Initialize k8s cluster
      register: kubeadm_init
      ansible.builtin.command:
        argv:
          - "kubeadm"
          - "init"
          - "--config={{ k8s.kubeadm_config_path }}"
          - "--upload-certs"
          - "--skip-phases=addon/kube-proxy"

    - name: Revert temporarily circumvent reported issues(https://github.com/kube-vip/kube-vip/issues/684)
      ansible.builtin.lineinfile:
        path: /etc/kubernetes/manifests/kube-vip.yaml
        search_string: "path: /etc/kubernetes/super-admin.conf"
        line: "      path: /etc/kubernetes/admin.conf"
        state: present

    - name: Create .kube folder
      file:
        path: "~{{ local_user }}/.kube"
        state: directory
        owner: "{{ local_user }}"
        group: "{{ local_user }}"

    - name: Copy admin.conf to .kube folder
      copy:
        src: /etc/kubernetes/admin.conf
        dest: "~{{ local_user }}/.kube/config"
        owner: "{{ local_user }}"
        group: "{{ local_user }}"
        remote_src: yes

    - name: Wait for kube-vip to be ready
      environment:
        KUBECONFIG: "/etc/kubernetes/admin.conf"
      ansible.builtin.shell:
        cmd: "kubectl wait pod/kube-vip-k8s.ym.master01 --for=condition=Ready --timeout=5m --namespace=kube-system"

    - name: Copy admin.conf to /tmp/kubeadm/config
      ansible.builtin.copy:
        src: /etc/kubernetes/admin.conf
        dest: "/tmp/kubeadm/config"
        remote_src: yes

    - name: Install cilium cli
      ansible.builtin.shell: |
        CILIUM_CLI_VERSION=$(curl -s https://raw.githubusercontent.com/cilium/cilium-cli/main/stable.txt)
        CLI_ARCH=amd64
        if [ "$(uname -m)" = "aarch64" ]; then CLI_ARCH=arm64; fi
        curl -L --fail --remote-name-all https://github.com/cilium/cilium-cli/releases/download/${CILIUM_CLI_VERSION}/cilium-linux-${CLI_ARCH}.tar.gz{,.sha256sum}
        sha256sum --check cilium-linux-${CLI_ARCH}.tar.gz.sha256sum
        sudo tar xzvfC cilium-linux-${CLI_ARCH}.tar.gz /usr/local/bin
        rm cilium-linux-${CLI_ARCH}.tar.gz{,.sha256sum} -f

    - name: Install cilium for k8s
      environment:
        KUBECONFIG: "/etc/kubernetes/admin.conf"
      ansible.builtin.shell:
        cmd: "/usr/local/bin/cilium install --version {{ cilium.version }}"

    - name: Check cilium status
      environment:
        KUBECONFIG: "/etc/kubernetes/admin.conf"
      ansible.builtin.command:
        cmd: "/usr/local/bin/cilium status --wait"
      register: cilium_status

    - name: Debug cilium status
      ansible.builtin.debug:
        msg: "{{ cilium_status.stdout }}"
